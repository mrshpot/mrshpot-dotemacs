.. role:: code(strong)
.. role:: file(emphasis)

======================
README file for Pymacs
======================

Pymacs is a powerful tool which, once started from Emacs, allows
both-way communication between Emacs Lisp and Python.  Pymacs aims
Python as an extension language for Emacs rather than the other way
around, and this asymmetry is reflected in some design choices.  Within
Emacs Lisp code, one may load and use Python modules.  Python functions
may themselves use Emacs services, and handle Emacs Lisp objects kept in
Emacs Lisp space.

The Pymacs manual (either in `HTML format`__ or `PDF format`__) has
installation instructions, a full description of the API, pointers
to documented examples, to resources, and to other Pymacs sites
or projects.  The distribution also includes the Poor's Python
Pre-Processor (**p4**) and its manual (either in `HTML format`__ or `PDF
format`__).

__ http://pymacs.progiciels-bpi.ca/pymacs.html
__ http://pymacs.progiciels-bpi.ca/pymacs.pdf
__ http://pymacs.progiciels-bpi.ca/p4.html
__ http://pymacs.progiciels-bpi.ca/p4.pdf

The official distribution is available at:

  + http://pymacs.progiciels-bpi.ca/archives/Pymacs.tar.gz

Some older distributions, and maybe beta pre-releases for testers,
*might* be available in this directory:

  + http://pymacs.progiciels-bpi.ca/archives/

To get a copy of my sandbox repository for Pymacs, use::

  git clone git://github.com/pinard/Pymacs.git

Please report problems, comments and suggestions to `Fran√ßois Pinard`__
at ``pinard@iro.umontreal.ca``.

__ mailto:pinard@iro.umontreal.ca
